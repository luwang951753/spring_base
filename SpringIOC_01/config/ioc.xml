<?xml version="1.0" encoding="UTF-8"?>
<!--
beans,整个配置文件的根节点，包含一个或多个bean元素
xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 最基本的命名空间定义

与上述命名空间定义相配套的schema定义文件的装载路径
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
    <!--
    注册一个Person对象，Spring会自动创建这个Person对象
    一个bean标签可以注册一个组件（对象、类）
    class：写要注册的组件的全名
    id:这个对象的唯一标识
    -->

    <bean class="com.atguigu.bean.Person" id="person01">
        <!--
        使用property标签为Person对象的属性赋值
        name：指定属性名
        value：为这个属性赋值
        -->
        <property name="lastName" value="Lee"></property>
        <property name="age" value="21"></property>
        <property name="email" value="840446169@qq.com"></property>
        <property name="gender" value="女"></property>
    </bean>

    <bean class="com.atguigu.bean.Person" id="person02">
        <!--
        使用property标签为Person对象的属性赋值
        name：指定属性名
        value：为这个属性赋值
        -->
        <property name="lastName" value="Chen"></property>
    </bean>

    <bean class="com.atguigu.bean.Person" id="person03">
        <!-- 调用有参构造器创建对象，并进行赋值
        public Person(String lastName, int age, String email, String gender)
        -->
        <constructor-arg name="lastName" value="小明"></constructor-arg>
        <constructor-arg name="email" value="7493840@qq.com"></constructor-arg>
        <constructor-arg name="age" value="7"></constructor-arg>
        <constructor-arg name="gender" value="男"></constructor-arg>
    </bean>

    <!-- 省略name，严格按照构造器参数的位置 -->
    <bean class="com.atguigu.bean.Person" id="person04">
        <!-- 调用有参构造器创建对象，并进行赋值
        public Person(String lastName, int age, String email, String gender)
        -->
        <constructor-arg value="小明"></constructor-arg>
        <constructor-arg value="7"></constructor-arg>
        <!-- index指定索引，从0开始 -->
        <constructor-arg value="7493840@qq.com" index="3"></constructor-arg>
        <constructor-arg value="男"></constructor-arg>
    </bean>

    <!-- 重载的情况下，type可以指定参数类型 -->
    <bean class="com.atguigu.bean.Person" id="person05">
        <constructor-arg value="小丽"></constructor-arg>
        <constructor-arg value="17" type="java.lang.Integer"></constructor-arg>
        <constructor-arg value="女"></constructor-arg>
    </bean>

    <!-- 通过p名称空间为bean赋值:导入p名称空间 -->
    <!-- 名称空间：在xml中名称空间是用来防止标签重复的-->
    <!-- 1)导入p名称空间; 2)写带前缀的标签/属性 -->
    <!--
        <book>
            <b:name>西游记</b:name>
            <price>34.2</price>
            <author>
                <a:name>吴承恩</a:name>
                <gender>男</gender>
            </author>
        </book>
    -->
    <bean id="person06" class="com.atguigu.bean.Person"
          p:lastName="哈哈" p:age="11" p:gender="女" p:email="haha@163.com"></bean>

    <!-- 实验4：正确的为各种属性赋值 -->
</beans>