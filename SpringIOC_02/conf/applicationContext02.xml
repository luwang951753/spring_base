<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- 实验12：引用外部属性文件★  依赖context名称空间-->
    <!--  数据库连接池作为单实例是最好的：一个项目就一个连接池，连接池里面管理很多连接，连接是直接从连接池里面拿  -->
<!--  可以让spring帮我们创建连接池对象（管理连接池）  -->
    <!-- 加载外部配置文件 -->
    <context:property-placeholder location="classpath:dbconfig.properties"/>
    <!-- ${key}动态取出配置文件中某个key对应的值,为了防止配置文件中的key和spring中的关键字冲突，可以给key取名时加一个前缀 -->
    <bean id="c3p0DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
    </bean>

    <bean class="com.atguigu.bean.Car" id="car">
        <!-- username 系统用户名 -->
        <property name="carName" value="${username}"/>
    </bean>

    <!--  实验13：基于XML的自动装配  -->

</beans>